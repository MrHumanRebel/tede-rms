{% for assetAssignment in FINANCIALS.assetsAssigned %}
    {% for flag in assetAssignment.flagsblocks.BLOCK %}
        <div class="alert alert-danger">
            <a href="{{ CONFIG.ROOTURL }}/maintenance/job.php?id={{ flag.maintenanceJobs_id }}" type="button" style="text-decoration: none;" class="close"><i class="fas fa-info-circle"></i></a>
            <h5> <i class="fas fa-ban"></i> {{ assetAssignment.assets_tag|aTag }}: {{ assetAssignment.manufacturers_name }} - {{ assetAssignment.assetTypes_name }}</h5>
            {{ flag.maintenanceJobs_title }} - {{ flag.maintenanceJobs_faultDescription }}
        </div>
    {% endfor %}
{% endfor %}
<div class="card card-primary card-outline card-outline-tabs">
    <div class="card-header p-0 border-bottom-0 card-tabs">
        <ul class="nav nav-tabs" id="asset-list-tabs-tab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="asset-list-tabs-home-tab" data-toggle="pill" href="#asset-list-tabs-home" role="tab" aria-controls="asset-list-tabs-home" aria-selected="false"><b>Összesen</b></a>
            </li>
            {% if FINANCIALS.assetsAssigned|length > 0 %}
            <li class="nav-item">
                <a class="nav-link" id="asset-list-tab-thisinstance" data-toggle="pill" href="#asset-list-tabs-thisinstance" role="tab" aria-controls="asset-list-tabs-thisinstance" aria-selected="true">{{ USERDATA.instance.instances_name }}</a>
            </li>
            {% endif %}
            {% for instance in FINANCIALS.assetsAssignedSUB %}
                <li class="nav-item">
                    <a class="nav-link" id="asset-list-tab-instance{{ instance['instance'].instances_id }}" data-toggle="pill" href="#asset-list-tabs-instance{{ instance['instance'].instances_id }}" role="tab" aria-controls="asset-list-tabs-instance{{ instance['instance'].instances_id }}" aria-selected="false">{{  instance['instance'].instances_name }}</a>
                </li>
            {% endfor %}
            <li class="pt-2 px-3">
                <div class="card-tools">
                    {% if "PROJECTS:PROJECT_ASSETS:EDIT:ASSIGNMNET_COMMENT"|instancePermissions %}
                        <button type="button" class="btn btn-tool" title="Komment beállítása a hozzárendeléshez" id="setAssetAssignmentComment">
                            <i class="far fa-comment"></i></button>
                    {% endif %}
                    {% if "PROJECTS:PROJECT_ASSETS:EDIT:DISCOUNT"|instancePermissions and project.projectsTypes_config_finance == 1 %}
                        <button type="button" class="btn btn-tool" title="Kedvezmény beállítása" id="setAssetAssignmentDiscount">
                            <i class="fas fa-percent"></i></button>
                    {% endif %}
                    {% if "PROJECTS:PROJECT_ASSETS:EDIT:CUSTOM_PRICE"|instancePermissions and project.projectsTypes_config_finance == 1 %}
                        <button type="button" class="btn btn-tool" title="Egyéni ár beállítása" id="setAssetAssignmentPrice">
                            <i class="fas fa-coins"></i></button>
                    {% endif %}
                    {% if "PROJECTS:PROJECT_ASSETS:EDIT:ASSIGNMENT_STATUS"|instancePermissions %}
                        <button type="button" class="btn btn-tool" title="Státusz beállítása" id="setAllAssetStatus">
                            <i class="fas fa-clipboard-check"></i></button>
                    {% endif %}
                    {% if "PROJECTS:PROJECT_ASSETS:CREATE:ASSIGN_AND_UNASSIGN"|instancePermissions %}
                         <button type="button" class="btn btn-tool" title="Eszköz csere" id="swapAsset">
                            <i class="fas fa-sync"></i>
                        </button>                        
                        <button type="button" class="btn btn-tool" title="Eszközök eltávolítása" id="setAssetAssignmentDelete">
                            <i class="fas fa-trash"></i></button>
                    {% endif %}
                    <button type="button" class="btn btn-tool" title="Mindet kibővíteni" id="expandAll">
                        <i class="fas fa-angle-down"></i> Kiterjesztés</button>
                </div>
            </li>
        </ul>
    </div>
    <div class="card-body p-0">
        <div class="tab-content" id="asset-list-tabs-tabContent">
            <div class="tab-pane fade show active p-3" id="asset-list-tabs-home" role="tabpanel" aria-labelledby="asset-list-tabs-home-tab">
                <p style="font-style: italic;">A projekt ezen eszközeinek megtekintéséhez válasszon egy céget fent</p>
                <p>{{ (FINANCIALS.assetsAssigned|length + FINANCIALS.assetsAssignedSUB|length) }} féle eszköz{{ (FINANCIALS.assetsAssigned|length + FINANCIALS.assetsAssignedSUB|length) != 1 ? 'ök' : '' }} rendelve a {{ project.projects_name }} projekthez ({{FINANCIALS.mass|mass }})</p>
                {% if project.projectsTypes_config_finance == 1 %}
                    <p>A projekt időtartama {{ FINANCIALS['priceMaths']["weeks"] }} hét{{ FINANCIALS['priceMaths']["weeks"] != 1 ? '' : '' }} és {{ FINANCIALS['priceMaths']["days"] }} nap{{ FINANCIALS['priceMaths']["days"] != 1 ? '' : '' }}</p>
                    {% if "PROJECTS:EDIT:DATES"|instancePermissions %}
                    <a href="{{ CONFIG.ROOTURL }}/project/?id={{ project.projects_id }}">A projekt időtartamának módosítása</a>
                    {% endif %}
                </p>
                {% endif %}
            </div>
            <div class="tab-pane fade" id="asset-list-tabs-thisinstance" role="tabpanel" aria-labelledby="asset-list-tabs-profile-tab">
                {% embed 'project/twigIncludes/assetList/table.twig' with {"instanceid": USERDATA.instance.instances_id} %}
                    {% block tableBody %}
                        {% set currentCategory = "" %}
                        {% for type in FINANCIALS.assetsAssigned %}
                            {% if type['assets'][0].assetCategories_name != currentCategory %}
                                {% set currentCategory = type['assets'][0].assetCategories_name %}
                                {% set currentCategoryID = type['assets'][0].assetCategories_id %}
                                <tr style="background-color: #F5F5F5;" class="showHideFilter" data-filter="categoryFilter{{ currentCategoryID }}" data-filterclose="categoryFilterClose{{ currentCategoryID }}">
                                    <td colspan="999">
                                        <i class="{{ type['assets'][0].assetCategories_fontAwesome }}" style="margin-right:10px;"></i>{{ type['assets'][0].assetCategories_name }}
                                    </td>
                                </tr>
                            {% endif %}
                            {% embed 'project/twigIncludes/assetList/tableItem.twig' with {"type": type,"all": FINANCIALS.assetsAssigned, "categoryid":currentCategoryID,"instanceid": USERDATA.instance.instances_id} %}{% endembed %}
                        {% endfor %}
                    {% endblock %}
                {% endembed %}
            </div>
            {% for instance in FINANCIALS.assetsAssignedSUB %}
                <div class="tab-pane fade" id="asset-list-tabs-instance{{ instance['instance'].instances_id }}" role="tabpanel" aria-labelledby="asset-list-tabs-messages-tab">
                    {% embed 'project/twigIncludes/assetList/table.twig' with {"instanceid": instance['instance'].instances_id } %}
                        {% block tableBody %}
                            {% set currentCategory = "" %}
                            {% for type in instance['assets'] %}
                                {% if type['assets'][0].assetCategories_name != currentCategory %}
                                    {% set currentCategory = type['assets'][0].assetCategories_name %}
                                    {% set currentCategoryID = type['assets'][0].assetCategories_id %}
                                    <tr style="background-color: #F5F5F5;" class="showHideFilter" data-filter="categoryFilter{{ currentCategoryID }}" data-filterclose="categoryFilterClose{{ currentCategoryID }}">
                                        <td colspan="999">
                                            <i class="{{ type['assets'][0].assetCategories_fontAwesome }}" style="margin-right:10px;"></i>{{ type['assets'][0].assetCategories_name }}
                                        </td>
                                    </tr>
                                {% endif %}
                                {% embed 'project/twigIncludes/assetList/tableItem.twig' with {"type": type,"all": instance, "categoryid":currentCategoryID,"instanceid": instance['instance'].instances_id} %}{% endembed %}
                            {% endfor %}
                        {% endblock %}
                    {% endembed %}
                </div>
            {% endfor %}
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        function getSelected() {
            var selected = [];
            $('.assetAssignmentCheckbox:checkbox:checked').each(function() {
                selected.push($(this).data('assetassignmentid'));
            });
            return selected;
        }
        $(".assetAssignmentCheckboxAll[data-instanceid]").click(function () {
            var instance = $(this).data("instanceid");
            $(".assetAssignmentCheckbox[data-instanceid=" + instance + "]").prop('checked', $(this).prop('checked'));
            $(".assetAssignmentCheckboxType[data-instanceid=" + instance + "]").prop('checked', $(this).prop('checked'));
        });
        $(".assetAssignmentCheckboxType[data-typeid][data-instanceid]").click(function () {
            var type = $(this).data("typeid");
            var instance = $(this).data("instanceid");
            $(".assetAssignmentCheckbox[data-typeid=" + type + "][data-instanceid=" + instance + "]").prop('checked', $(this).prop('checked'));
        });
        $(".assetAssignmentCheckbox[data-typeid][data-instanceid]").click(function () {
            var type = $(this).data("typeid");
            var instance = $(this).data("instanceid");
            if ($(".assetAssignmentCheckbox[data-typeid=" + type + "][data-instanceid=" + instance + "]:checked").length == $(".assetAssignmentCheckbox[data-typeid=" + type + "][data-instanceid=" + instance + "]").length) {
                $(".assetAssignmentCheckboxType[data-typeid=" + type + "][data-instanceid=" + instance + "]").prop('checked', true);
            } else {
                $(".assetAssignmentCheckboxType[data-typeid=" + type + "][data-instanceid=" + instance + "]").prop('checked', false);
            }
        });


        $(".showHideFilter").click(function () {
            $("." + $(this).data("filter")).toggle(500);
            if ($(this).data("filterclose")) {
                $("." + $(this).data("filterclose")).fadeOut(500);
            }
        });
        $("#expandAll").click(function () {
            if ($(".categoryFilter").is(":visible")) {
                if ($(".typeFilter").is(":visible")) {
                    $(".typeFilter").hide();
                    $(".categoryFilter").hide();
                } else {
                    $(".typeFilter").show();
                }
            } else {
                $(".categoryFilter").show();
            }
        });
        $(".categoryFilter").hide();
        $(".typeFilter").hide();

        {% if "PROJECTS:PROJECT_ASSETS:EDIT:ASSIGNMNET_COMMENT"|instancePermissions %}
        $("#setAssetAssignmentComment").click(function () {
            var selected = getSelected();
            if (selected.length > 0) {
                bootbox.prompt({
                    title: "Komment beállítása",
                    message: "Ez felülírja a projektben a kiválasztott eszközökhöz már beállított kommenteket.",
                    inputType: 'text',
                    callback: function (result) {
                        if (result) {
                            ajaxcall("projects/assets/setComment.php", {
                                "assetsAssignments": selected,
                                "assetsAssignments_comment": result
                            }, function (data) {
                                location.reload();
                            });
                        }
                    }
                });
            }
        });
        {% endif %}
        {% if "PROJECTS:PROJECT_ASSETS:EDIT:CUSTOM_PRICE"|instancePermissions %}
        $("#setAssetAssignmentPrice").click(function () {
            var selected = getSelected();
            if (selected.length > 0) {
                bootbox.prompt({
                    title: "Egyéni ár beállítása",
                    message: "Ez felülírja a bérleti díj automatikus számítását, amely általában a projekt hosszúsága alapján történik, és helyette itt megadott értékre állítja.<br/>Ha az egyéni ár 0-ra van állítva, akkor eltávolítja az összes korábban megadott egyéni árat.<br/><br/>Ez felülírja a projektben a kiválasztott eszközökhöz már beállított egyéni árakat.",
                    inputType: 'number',
                    min: 0,
                    step: 0.01,
                    callback: function (result) {
                        if (result) {
                            ajaxcall("projects/assets/setPrice.php", {
                                "assetsAssignments": selected,
                                "assetsAssignments_customPrice": result
                            }, function (data) {
                                location.reload();
                            });
                        }
                    }
                });
            }
        });
        {% endif %}
        {% if "PROJECTS:PROJECT_ASSETS:EDIT:DISCOUNT"|instancePermissions %}
        $("#setAssetAssignmentDiscount").click(function () {
            var selected = getSelected();
            if (selected.length > 0) {
                bootbox.prompt({
                    title: "Kedvezmény beállítása",
                    message: "Kedvezményt ad a kiválasztott eszközökhöz egy százalékos arányban.<br /><br />Pl. Ha 20-at ad meg, akkor az ár 0,8-szal szorzódik, ha 100-at ad meg, akkor az ár 0-ra csökken, vagy ha 0-t ad meg, akkor teljes árat jelent.<br />Ez felülírja a projektben a kiválasztott eszközökhöz már beállított kedvezményeket.",
                    inputType: 'number',
                    min: 0,
                    max: 100,
                    step: 1,
                    callback: function (result) {
                        if (result) {
                            ajaxcall("projects/assets/setDiscount.php", {
                                "assetsAssignments": selected,
                                "assetsAssignments_discount": result
                            }, function (data) {
                                location.reload();
                            });
                        }
                    }
                });
            }
        });
        {% endif %}
        {% if "PROJECTS:PROJECT_ASSETS:CREATE:ASSIGN_AND_UNASSIGN"|instancePermissions %}
        $("#setAssetAssignmentDelete").click(function () {
            var selected = getSelected();
            if (selected.length > 0) {
                bootbox.confirm({
                    message: "Biztosan el akarja távolítani ezeket az eszközöket a projektből? Ez számlázási következményekkel járhat.",
                    buttons: {
                        cancel: {
                            label: 'Nem',
                            className: 'btn-success'
                        },
                        confirm: {
                            label: 'Igen',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            ajaxcall("projects/assets/unassign.php", {
                                "assetsAssignments": selected
                            }, function (data) {
                                location.reload();
                            });
                        }
                    }
                });
            }
        });
        $("#swapAsset").click(function () {
            let selected = getSelected();
            if (selected.length < 1) {
                Toast.fire({
                    type: 'error',
                    title: 'Kérjük, válasszon ki egy eszközt.'
                });
            } else if (selected.length > 1) {
                Toast.fire({
                    type: 'error',
                    title: 'Kérjük, válasszon ki csak egy eszközt.'
                });
            } else {
                //we have some assets, lets swap them
                let alternatives = [];
                //get type of assigned asset
                ajaxcall("assets/substitutions.php", {
                    "assetsAssignments_id": selected[0]
                }, function (returned) {
                    if (returned.response) {
                        //create array of alternative assets
                        returned.response.forEach(
                            element => alternatives.push({
                                "text": element.assets_tag + ((element.asset_definableFields_1 !== "") ? " (" + element.asset_definableFields_1 + ")" : ""),
                                "value": element.assets_id
                            })
                        )
                        bootbox.prompt({
                            title: "Swap Asset",
                            message: "Replace asset with: ",
                            inputType: 'select',
                            inputOptions: alternatives,
                            callback: function (result) {
                                if (result) {
                                    //swap asset in asset assignment
                                    ajaxcall("projects/assets/swap.php",
                                        {
                                            "assetsAssignments_id": selected[0],
                                            "assets_id": result
                                        }, function () {
                                            window.location.reload()
                                        }
                                    );
                                }
                            }
                        });
                    } else {
                        //no assets exist, so let user know
                        Toast.fire({
                            type: 'info',
                            title: 'Nincs elérhető eszköz a cseréhez!'
                        });
                    }
                });
            }
        });
        {% endif %}
        {% if "PROJECTS:PROJECT_ASSETS:EDIT:ASSIGNMENT_STATUS"|instancePermissions %}
        $("#setAllAssetStatus").click(function () {
            let selected = getSelected();
            if (selected.length > 0) {
                popupTitle = "Állítsa be a kiválasztott eszközök státuszát a(z) {{ project.projects_name }} projektben"
            } else {
                popupTitle = "Állítsa be az összes eszköz státuszát a(z) {{ project.projects_name }} projektben"
            }
            bootbox.prompt({
                title: popupTitle,
                inputType: 'select',
                inputOptions: [
                    {% for status in assetsAssignmentsStatus %}
                    {
                        text: '{{ status.assetsAssignmentsStatus_name|escape('js')}}',
                        value: '{{ status.assetsAssignmentsStatus_id }}'
                    },
                    {% endfor %}
                ],
                callback: function (result) {
                    if (result) {
                        if (selected.length > 0) {
                            ajaxcall("projects/assets/setStatus.php", {"assetsAssignments_id":selected, "assetsAssignments_status":result}, function (){
                                window.location.reload();
                            });
                        } else {
                            ajaxcall("projects/assets/setStatus.php", {"projects_id":{{ project.projects_id }}, "assetsAssignments_status":result}, function (result){
                                window.location.reload();
                            });
                        }
                    }
                }
            });
        });
        {% endif %}
    });
</script>
